{"version":3,"file":"static/js/995.d9043ad8.chunk.js","mappings":"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","sources":["components/component/SearchBarStyled.jsx","components/component/SearchBar .jsx","components/pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  width: 400px;\n  height: 40px;\n  position: relative;\n  background: #fff;\n  color: #fff;\n  text-decoration: none;\n  text-transform: uppercase;\n  font-size: 1.5em;\n  letter-spacing: 0.1em;\n  font-weight: 400;\n  padding: 10px 30px;\n  transition: 0.5s;\n  padding-top: 15px;\n\n  &:hover,\n  &:focus-within {\n    background: #6eff3e;\n    color: #6eff3e;\n    letter-spacing: 0.25em;\n    box-shadow: 0 0 35px #6eff3e;\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    inset: 2px;\n    background: #27282c;\n  }\n`;\n\nexport const StyledInput = styled.input`\n  position: relative;\n  width: 100%;\n  border: none;\n  background: none;\n  color: #fff;\n  font-size: 1.2em; /* Зменшено розмір шрифту */\n  text-transform: uppercase;\n  letter-spacing: 0.05em; /* Зменшено відстань між буквами */\n  outline: none;\n  transition: border-bottom 0.5s, color 0.5s, letter-spacing 0.5s;\n  z-index: 9;\n\n  &:before {\n    content: '';\n    position: absolute;\n    inset: 2px;\n    background: #27282c;\n  }\n\n  &:focus {\n    border-bottom: 2px solid #6eff3e;\n    color: #6eff3e;\n    letter-spacing: 0.1em;\n    border-bottom: none; /* Зменшено відстань між буквами при фокусі */\n  }\n`;\n","import React, { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { StyledForm, StyledInput } from './SearchBarStyled';\n\nexport const SearchBar = () => {\n  const [movie, setMovie] = useState('');\n  const [, setSearchParams] = useSearchParams();\n  function formSubmit(e) {\n    e.preventDefault();\n    if (movie) {\n      setSearchParams({ search: movie });\n    }\n  }\n  function imputOnChange(e) {\n    setMovie(e.target.value);\n  }\n  return (\n    <>\n      <StyledForm onSubmit={formSubmit}>\n        <StyledInput\n          type=\"text\"\n          name=\"search\"\n          placeholder=\"Movie\"\n          value={movie}\n          onChange={imputOnChange}\n        />\n\n        <button></button>\n      </StyledForm>\n    </>\n  );\n};\n","import { getSearchMovie } from 'components/APP/App';\nimport { SearchBar } from 'components/component/SearchBar ';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { Notify } from 'notiflix';\nimport { ItemMovies, ItemPhotoMovies, ListItemMovies } from './MoviesStyled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isloading, setIsloading] = useState(false);\n  const [seatchParams] = useSearchParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    async function getSearch() {\n      try {\n        setIsloading(true);\n        const movi = seatchParams.get('search');\n        const { results } = await getSearchMovie(movi);\n        setMovies(results);\n      } catch (error) {\n        Notify.failure(error.message);\n      } finally {\n        setIsloading(false);\n      }\n    }\n    getSearch();\n  }, [seatchParams]);\n\n  return (\n    <section>\n      <SearchBar />\n      {isloading && <div></div>}\n      <ListItemMovies>\n        {movies &&\n          movies.map(e => {\n            return (\n              <ItemMovies key={e.id}>\n                <Link to={`/movies/${e.id}`} state={location}>\n                  <ItemPhotoMovies\n                    src={\n                      e.poster_path\n                        ? `https://image.tmdb.org/t/p/original/${e.poster_path}`\n                        : './photo/ukrkino.jpg'\n                    }\n                    alt=\"Logo\"\n                  />\n                  <p>{e.original_title}</p>\n                </Link>\n              </ItemMovies>\n            );\n          })}\n      </ListItemMovies>\n    </section>\n  );\n};\nexport default Movies;\n"],"names":["StyledForm","styled","_templateObject","_taggedTemplateLiteral","StyledInput","_templateObject2","SearchBar","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useSearchParams","useSearchParams","setSearchParams","_jsx","_Fragment","children","_jsxs","onSubmit","e","preventDefault","search","type","name","placeholder","value","onChange","target","movies","setMovies","_useState3","_useState4","isloading","setIsloading","seatchParams","location","useLocation","useEffect","_getSearch","_asyncToGenerator","_regeneratorRuntime","_callee","movi","_yield$getSearchMovie","results","_context","prev","next","get","getSearchMovie","sent","t0","Notify","message","finish","stop","apply","arguments","getSearch","ListItemMovies","map","ItemMovies","Link","to","concat","id","state","ItemPhotoMovies","src","poster_path","alt","original_title"],"sourceRoot":""}